{"ast":null,"code":"import _createForOfIteratorHelper from\"/home/tomas/Documents/CodingProjects/snake/react-snake-START-HERE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _slicedToArray from\"/home/tomas/Documents/CodingProjects/snake/react-snake-START-HERE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useRef,useEffect}from\"react\";import{useInterval}from\"./useInterval\";import{CANVAS_SIZE,SNAKE_START,APPLE_START,SCALE,SPEED,DIRECTIONS}from\"./constants\";var App=function App(){var canvasRef=useRef();var _useState=useState(SNAKE_START),_useState2=_slicedToArray(_useState,2),snake=_useState2[0],setSnake=_useState2[1];var _useState3=useState(APPLE_START),_useState4=_slicedToArray(_useState3,2),apple=_useState4[0],setApple=_useState4[1];var _useState5=useState([0,-1]),_useState6=_slicedToArray(_useState5,2),dir=_useState6[0],setDir=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),speed=_useState8[0],setSpeed=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),gameOver=_useState10[0],setGameOver=_useState10[1];useInterval(function(){return gameLoop();},speed);var endGame=function endGame(){setSpeed(null);setGameOver(true);};var moveSnake=function moveSnake(_ref){var keyCode=_ref.keyCode;return keyCode>=37&&keyCode<=40&&setDir(DIRECTIONS[keyCode]);};var createApple=function createApple(){return apple.map(function(_a,i){return Math.floor(Math.random()*(CANVAS_SIZE[i]/SCALE));});};var checkCollision=function checkCollision(piece){var snk=arguments.length>1&&arguments[1]!==undefined?arguments[1]:snake;if(piece[0]*SCALE>=CANVAS_SIZE[0]||piece[0]<0||piece[1]*SCALE>=CANVAS_SIZE[1]||piece[1]<0)return true;var _iterator=_createForOfIteratorHelper(snk),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var segment=_step.value;if(piece[0]===segment[0]&&piece[1]===segment[1])return true;}}catch(err){_iterator.e(err);}finally{_iterator.f();}return false;};var checkAppleCollision=function checkAppleCollision(newSnake){if(newSnake[0][0]===apple[0]&&newSnake[0][1]===apple[1]){var newApple=createApple();while(checkCollision(newApple,newSnake)){newApple=createApple();}setApple(newApple);return true;}return false;};var gameLoop=function gameLoop(){var snakeCopy=JSON.parse(JSON.stringify(snake));var newSnakeHead=[snakeCopy[0][0]+dir[0],snakeCopy[0][1]+dir[1]];snakeCopy.unshift(newSnakeHead);if(checkCollision(newSnakeHead))endGame();if(!checkAppleCollision(snakeCopy))snakeCopy.pop();setSnake(snakeCopy);};var startGame=function startGame(){setSnake(SNAKE_START);setApple(APPLE_START);setDir([0,-1]);setSpeed(SPEED);setGameOver(false);};useEffect(function(){var context=canvasRef.current.getContext(\"2d\");context.setTransform(SCALE,0,0,SCALE,0,0);context.clearRect(0,0,window.innerWidth,window.innerHeight);context.fillStyle=\"pink\";snake.forEach(function(_ref2){var _ref3=_slicedToArray(_ref2,2),x=_ref3[0],y=_ref3[1];return context.fillRect(x,y,1,1);});context.fillStyle=\"lightblue\";context.fillRect(apple[0],apple[1],1,1);},[snake,apple,gameOver]);return/*#__PURE__*/React.createElement(\"div\",{role:\"button\",tabIndex:\"0\",onKeyDown:function onKeyDown(e){return moveSnake(e);}},/*#__PURE__*/React.createElement(\"canvas\",{style:{border:\"1px solid black\"},ref:canvasRef,width:\"\".concat(CANVAS_SIZE[0],\"px\"),height:\"\".concat(CANVAS_SIZE[1],\"px\")}),gameOver&&/*#__PURE__*/React.createElement(\"div\",null,\"GAME OVER!\"),/*#__PURE__*/React.createElement(\"button\",{onClick:startGame},\"Start Game\"));};export default App;","map":{"version":3,"sources":["/home/tomas/Documents/CodingProjects/snake/react-snake-START-HERE/src/App.js"],"names":["React","useState","useRef","useEffect","useInterval","CANVAS_SIZE","SNAKE_START","APPLE_START","SCALE","SPEED","DIRECTIONS","App","canvasRef","snake","setSnake","apple","setApple","dir","setDir","speed","setSpeed","gameOver","setGameOver","gameLoop","endGame","moveSnake","keyCode","createApple","map","_a","i","Math","floor","random","checkCollision","piece","snk","segment","checkAppleCollision","newSnake","newApple","snakeCopy","JSON","parse","stringify","newSnakeHead","unshift","pop","startGame","context","current","getContext","setTransform","clearRect","window","innerWidth","innerHeight","fillStyle","forEach","x","y","fillRect","e","border"],"mappings":"wYAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,MAA1B,CAAkCC,SAAlC,KAAmD,OAAnD,CACA,OAASC,WAAT,KAA4B,eAA5B,CACA,OACCC,WADD,CAECC,WAFD,CAGCC,WAHD,CAICC,KAJD,CAKCC,KALD,CAMCC,UAND,KAOO,aAPP,CASA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,CACjB,GAAMC,CAAAA,SAAS,CAAGV,MAAM,EAAxB,CADiB,cAESD,QAAQ,CAACK,WAAD,CAFjB,wCAEVO,KAFU,eAEHC,QAFG,8BAGSb,QAAQ,CAACM,WAAD,CAHjB,yCAGVQ,KAHU,eAGHC,QAHG,8BAIKf,QAAQ,CAAC,CAAC,CAAD,CAAI,CAAC,CAAL,CAAD,CAJb,yCAIVgB,GAJU,eAILC,MAJK,8BAKSjB,QAAQ,CAAC,IAAD,CALjB,yCAKVkB,KALU,eAKHC,QALG,8BAMenB,QAAQ,CAAC,KAAD,CANvB,0CAMVoB,QANU,gBAMAC,WANA,gBAQjBlB,WAAW,CAAC,iBAAMmB,CAAAA,QAAQ,EAAd,EAAD,CAAmBJ,KAAnB,CAAX,CAEA,GAAMK,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACrBJ,QAAQ,CAAC,IAAD,CAAR,CACAE,WAAW,CAAC,IAAD,CAAX,CACA,CAHD,CAKA,GAAMG,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,UAAGC,CAAAA,OAAH,MAAGA,OAAH,OACjBA,CAAAA,OAAO,EAAI,EAAX,EACAA,OAAO,EAAI,EADX,EAEAR,MAAM,CAACR,UAAU,CAACgB,OAAD,CAAX,CAHW,EAAlB,CAKA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,SACnBZ,CAAAA,KAAK,CAACa,GAAN,CAAU,SAACC,EAAD,CAAKC,CAAL,QACTC,CAAAA,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,IAAiB5B,WAAW,CAACyB,CAAD,CAAX,CAAiBtB,KAAlC,CAAX,CADS,EAAV,CADmB,EAApB,CAKA,GAAM0B,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,CAAwB,IAAhBC,CAAAA,GAAgB,2DAAVvB,KAAU,CAC9C,GACCsB,KAAK,CAAC,CAAD,CAAL,CAAW3B,KAAX,EAAoBH,WAAW,CAAC,CAAD,CAA/B,EACA8B,KAAK,CAAC,CAAD,CAAL,CAAW,CADX,EAEAA,KAAK,CAAC,CAAD,CAAL,CAAW3B,KAAX,EAAoBH,WAAW,CAAC,CAAD,CAF/B,EAGA8B,KAAK,CAAC,CAAD,CAAL,CAAW,CAJZ,CAMC,MAAO,KAAP,CAP6C,yCASxBC,GATwB,YAS9C,+CAA2B,IAAhBC,CAAAA,OAAgB,aAC1B,GACCF,KAAK,CAAC,CAAD,CAAL,GAAaE,OAAO,CAAC,CAAD,CAApB,EACAF,KAAK,CAAC,CAAD,CAAL,GAAaE,OAAO,CAAC,CAAD,CAFrB,CAIC,MAAO,KAAP,CACD,CAf6C,qDAgB9C,MAAO,MAAP,CACA,CAjBD,CAmBA,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,QAAD,CAAc,CACzC,GACCA,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,IAAmBxB,KAAK,CAAC,CAAD,CAAxB,EACAwB,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,IAAmBxB,KAAK,CAAC,CAAD,CAFzB,CAGE,CACD,GAAIyB,CAAAA,QAAQ,CAAGb,WAAW,EAA1B,CACA,MAAOO,cAAc,CAACM,QAAD,CAAWD,QAAX,CAArB,CAA2C,CAC1CC,QAAQ,CAAGb,WAAW,EAAtB,CACA,CACDX,QAAQ,CAACwB,QAAD,CAAR,CACA,MAAO,KAAP,CACA,CACD,MAAO,MAAP,CACA,CAbD,CAeA,GAAMjB,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACtB,GAAMkB,CAAAA,SAAS,CAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe/B,KAAf,CAAX,CAAlB,CACA,GAAMgC,CAAAA,YAAY,CAAG,CACpBJ,SAAS,CAAC,CAAD,CAAT,CAAa,CAAb,EAAkBxB,GAAG,CAAC,CAAD,CADD,CAEpBwB,SAAS,CAAC,CAAD,CAAT,CAAa,CAAb,EAAkBxB,GAAG,CAAC,CAAD,CAFD,CAArB,CAIAwB,SAAS,CAACK,OAAV,CAAkBD,YAAlB,EACA,GAAIX,cAAc,CAACW,YAAD,CAAlB,CAAkCrB,OAAO,GACzC,GAAI,CAACc,mBAAmB,CAACG,SAAD,CAAxB,CAAqCA,SAAS,CAACM,GAAV,GACrCjC,QAAQ,CAAC2B,SAAD,CAAR,CACA,CAVD,CAYA,GAAMO,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACvBlC,QAAQ,CAACR,WAAD,CAAR,CACAU,QAAQ,CAACT,WAAD,CAAR,CACAW,MAAM,CAAC,CAAC,CAAD,CAAI,CAAC,CAAL,CAAD,CAAN,CACAE,QAAQ,CAACX,KAAD,CAAR,CACAa,WAAW,CAAC,KAAD,CAAX,CACA,CAND,CAQAnB,SAAS,CAAC,UAAM,CACf,GAAM8C,CAAAA,OAAO,CAAGrC,SAAS,CAACsC,OAAV,CAAkBC,UAAlB,CAA6B,IAA7B,CAAhB,CACAF,OAAO,CAACG,YAAR,CAAqB5C,KAArB,CAA4B,CAA5B,CAA+B,CAA/B,CAAkCA,KAAlC,CAAyC,CAAzC,CAA4C,CAA5C,EACAyC,OAAO,CAACI,SAAR,CACC,CADD,CAEC,CAFD,CAGCC,MAAM,CAACC,UAHR,CAICD,MAAM,CAACE,WAJR,EAMAP,OAAO,CAACQ,SAAR,CAAoB,MAApB,CACA5C,KAAK,CAAC6C,OAAN,CAAc,kDAAEC,CAAF,UAAKC,CAAL,gBAAYX,CAAAA,OAAO,CAACY,QAAR,CAAiBF,CAAjB,CAAoBC,CAApB,CAAuB,CAAvB,CAA0B,CAA1B,CAAZ,EAAd,EACAX,OAAO,CAACQ,SAAR,CAAoB,WAApB,CACAR,OAAO,CAACY,QAAR,CAAiB9C,KAAK,CAAC,CAAD,CAAtB,CAA2BA,KAAK,CAAC,CAAD,CAAhC,CAAqC,CAArC,CAAwC,CAAxC,EACA,CAbQ,CAaN,CAACF,KAAD,CAAQE,KAAR,CAAeM,QAAf,CAbM,CAAT,CAeA,mBACC,2BACC,IAAI,CAAC,QADN,CAEC,QAAQ,CAAC,GAFV,CAGC,SAAS,CAAE,mBAACyC,CAAD,QAAOrC,CAAAA,SAAS,CAACqC,CAAD,CAAhB,EAHZ,eAKC,8BACC,KAAK,CAAE,CAAEC,MAAM,CAAE,iBAAV,CADR,CAEC,GAAG,CAAEnD,SAFN,CAGC,KAAK,WAAKP,WAAW,CAAC,CAAD,CAAhB,MAHN,CAIC,MAAM,WAAKA,WAAW,CAAC,CAAD,CAAhB,MAJP,EALD,CAWEgB,QAAQ,eAAI,4CAXd,cAYC,8BAAQ,OAAO,CAAE2B,SAAjB,eAZD,CADD,CAgBA,CA9GD,CAgHA,cAAerC,CAAAA,GAAf","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\"\nimport { useInterval } from \"./useInterval\"\nimport {\n\tCANVAS_SIZE,\n\tSNAKE_START,\n\tAPPLE_START,\n\tSCALE,\n\tSPEED,\n\tDIRECTIONS,\n} from \"./constants\"\n\nconst App = () => {\n\tconst canvasRef = useRef()\n\tconst [snake, setSnake] = useState(SNAKE_START)\n\tconst [apple, setApple] = useState(APPLE_START)\n\tconst [dir, setDir] = useState([0, -1])\n\tconst [speed, setSpeed] = useState(null)\n\tconst [gameOver, setGameOver] = useState(false)\n\n\tuseInterval(() => gameLoop(), speed)\n\n\tconst endGame = () => {\n\t\tsetSpeed(null)\n\t\tsetGameOver(true)\n\t}\n\n\tconst moveSnake = ({ keyCode }) =>\n\t\tkeyCode >= 37 &&\n\t\tkeyCode <= 40 &&\n\t\tsetDir(DIRECTIONS[keyCode])\n\n\tconst createApple = () =>\n\t\tapple.map((_a, i) =>\n\t\t\tMath.floor(Math.random() * (CANVAS_SIZE[i] / SCALE))\n\t\t)\n\n\tconst checkCollision = (piece, snk = snake) => {\n\t\tif (\n\t\t\tpiece[0] * SCALE >= CANVAS_SIZE[0] ||\n\t\t\tpiece[0] < 0 ||\n\t\t\tpiece[1] * SCALE >= CANVAS_SIZE[1] ||\n\t\t\tpiece[1] < 0\n\t\t)\n\t\t\treturn true\n\n\t\tfor (const segment of snk) {\n\t\t\tif (\n\t\t\t\tpiece[0] === segment[0] &&\n\t\t\t\tpiece[1] === segment[1]\n\t\t\t)\n\t\t\t\treturn true\n\t\t}\n\t\treturn false\n\t}\n\n\tconst checkAppleCollision = (newSnake) => {\n\t\tif (\n\t\t\tnewSnake[0][0] === apple[0] &&\n\t\t\tnewSnake[0][1] === apple[1]\n\t\t) {\n\t\t\tlet newApple = createApple()\n\t\t\twhile (checkCollision(newApple, newSnake)) {\n\t\t\t\tnewApple = createApple()\n\t\t\t}\n\t\t\tsetApple(newApple)\n\t\t\treturn true\n\t\t}\n\t\treturn false\n\t}\n\n\tconst gameLoop = () => {\n\t\tconst snakeCopy = JSON.parse(JSON.stringify(snake))\n\t\tconst newSnakeHead = [\n\t\t\tsnakeCopy[0][0] + dir[0],\n\t\t\tsnakeCopy[0][1] + dir[1],\n\t\t]\n\t\tsnakeCopy.unshift(newSnakeHead)\n\t\tif (checkCollision(newSnakeHead)) endGame()\n\t\tif (!checkAppleCollision(snakeCopy)) snakeCopy.pop()\n\t\tsetSnake(snakeCopy)\n\t}\n\n\tconst startGame = () => {\n\t\tsetSnake(SNAKE_START)\n\t\tsetApple(APPLE_START)\n\t\tsetDir([0, -1])\n\t\tsetSpeed(SPEED)\n\t\tsetGameOver(false)\n\t}\n\n\tuseEffect(() => {\n\t\tconst context = canvasRef.current.getContext(\"2d\")\n\t\tcontext.setTransform(SCALE, 0, 0, SCALE, 0, 0)\n\t\tcontext.clearRect(\n\t\t\t0,\n\t\t\t0,\n\t\t\twindow.innerWidth,\n\t\t\twindow.innerHeight\n\t\t)\n\t\tcontext.fillStyle = \"pink\"\n\t\tsnake.forEach(([x, y]) => context.fillRect(x, y, 1, 1))\n\t\tcontext.fillStyle = \"lightblue\"\n\t\tcontext.fillRect(apple[0], apple[1], 1, 1)\n\t}, [snake, apple, gameOver])\n\n\treturn (\n\t\t<div\n\t\t\trole=\"button\"\n\t\t\ttabIndex=\"0\"\n\t\t\tonKeyDown={(e) => moveSnake(e)}\n\t\t>\n\t\t\t<canvas\n\t\t\t\tstyle={{ border: \"1px solid black\" }}\n\t\t\t\tref={canvasRef}\n\t\t\t\twidth={`${CANVAS_SIZE[0]}px`}\n\t\t\t\theight={`${CANVAS_SIZE[1]}px`}\n\t\t\t/>\n\t\t\t{gameOver && <div>GAME OVER!</div>}\n\t\t\t<button onClick={startGame}>Start Game</button>\n\t\t</div>\n\t)\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}