{"ast":null,"code":"import _createForOfIteratorHelper from\"/home/tomas/Documents/CodingProjects/snake/react-snake-START-HERE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _slicedToArray from\"/home/tomas/Documents/CodingProjects/snake/react-snake-START-HERE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState,useRef}from\"react\";import{useInterval}from\"../useInterval\";import{CANVAS_SIZE,SNAKE_START,APPLE_START,SCALE,SPEED,DIRECTIONS}from\"../constants\";import BestScore from\"./bestScore\";var MainSreen=function MainSreen(){var canvasRef=useRef();var _useState=useState(SNAKE_START),_useState2=_slicedToArray(_useState,2),snake=_useState2[0],setSnake=_useState2[1];var _useState3=useState(APPLE_START),_useState4=_slicedToArray(_useState3,2),apple=_useState4[0],setApple=_useState4[1];var _useState5=useState([0,-1]),_useState6=_slicedToArray(_useState5,2),dir=_useState6[0],setDir=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),speed=_useState8[0],setSpeed=_useState8[1];var _useState9=useState(true),_useState10=_slicedToArray(_useState9,2),gameOver=_useState10[0],setGameOver=_useState10[1];useInterval(function(){return gameLoop();},speed);var endGame=function endGame(){setSpeed(null);setGameOver(true);setClick(\"Click the playing field to Start\");};var moveSnake=function moveSnake(_ref){var keyCode=_ref.keyCode;return keyCode>=37&&keyCode<=40&&setDir(DIRECTIONS[keyCode]);};var createApple=function createApple(){return apple.map(function(_a,i){return Math.floor(Math.random()*(CANVAS_SIZE[i]/SCALE));});};var checkCollision=function checkCollision(piece){var snk=arguments.length>1&&arguments[1]!==undefined?arguments[1]:snake;if(piece[0]*SCALE>=CANVAS_SIZE[0]||piece[0]<0||piece[1]*SCALE>=CANVAS_SIZE[1]||piece[1]<0)return true;var _iterator=_createForOfIteratorHelper(snk),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var segment=_step.value;if(piece[0]===segment[0]&&piece[1]===segment[1])return true;}}catch(err){_iterator.e(err);}finally{_iterator.f();}return false;};var checkAppleCollision=function checkAppleCollision(newSnake){if(newSnake[0][0]===apple[0]&&newSnake[0][1]===apple[1]){setScore(score+1);var newApple=createApple();while(checkCollision(newApple,newSnake)){newApple=createApple();}setApple(newApple);return true;}return false;};var gameLoop=function gameLoop(){var snakeCopy=JSON.parse(JSON.stringify(snake));var newSnakeHead=[snakeCopy[0][0]+dir[0],snakeCopy[0][1]+dir[1]];snakeCopy.unshift(newSnakeHead);if(checkCollision(newSnakeHead))endGame();if(!checkAppleCollision(snakeCopy))snakeCopy.pop();setSnake(snakeCopy);};var startGame=function startGame(){setSnake(SNAKE_START);setApple(APPLE_START);setDir([0,-1]);setSpeed(SPEED);setGameOver(false);};useEffect(function(){var context=canvasRef.current.getContext(\"2d\");context.setTransform(SCALE,0,0,SCALE,0,0);context.clearRect(0,0,window.innerWidth,window.innerHeight);context.fillStyle=\"gray\";snake.forEach(function(_ref2){var _ref3=_slicedToArray(_ref2,2),x=_ref3[0],y=_ref3[1];return context.fillRect(x,y,1,1);});context.fillStyle=\"red\";context.fillRect(apple[0],apple[1],1,1);},[snake,apple,gameOver]);var _useState11=useState(\"Click the playing field to Start\"),_useState12=_slicedToArray(_useState11,2),click=_useState12[0],setClick=_useState12[1];var _useState13=useState(0),_useState14=_slicedToArray(_useState13,2),score=_useState14[0],setScore=_useState14[1];return/*#__PURE__*/React.createElement(\"div\",{className:\"mainScreen\",style:{display:\"flex\",justifyContent:\"center\",alignItems:\"center\"}},/*#__PURE__*/React.createElement(\"div\",{role:\"button\",tabIndex:\"1\",onKeyDown:function onKeyDown(e){return moveSnake(e);},onClick:function onClick(){setScore(0);startGame();setClick(\"Game is running\");}},/*#__PURE__*/React.createElement(BestScore,{score:score}),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h3\",null,click)),/*#__PURE__*/React.createElement(\"canvas\",{style:{border:\"2px solid gray\",backgroundColor:\"white\",margin:\"auto\"},ref:canvasRef,width:\"\".concat(CANVAS_SIZE[0],\"px\"),height:\"\".concat(CANVAS_SIZE[1],\"px\")})));};export default MainSreen;","map":{"version":3,"sources":["/home/tomas/Documents/CodingProjects/snake/react-snake-START-HERE/src/components/mainSreen.js"],"names":["React","useEffect","useState","useRef","useInterval","CANVAS_SIZE","SNAKE_START","APPLE_START","SCALE","SPEED","DIRECTIONS","BestScore","MainSreen","canvasRef","snake","setSnake","apple","setApple","dir","setDir","speed","setSpeed","gameOver","setGameOver","gameLoop","endGame","setClick","moveSnake","keyCode","createApple","map","_a","i","Math","floor","random","checkCollision","piece","snk","segment","checkAppleCollision","newSnake","setScore","score","newApple","snakeCopy","JSON","parse","stringify","newSnakeHead","unshift","pop","startGame","context","current","getContext","setTransform","clearRect","window","innerWidth","innerHeight","fillStyle","forEach","x","y","fillRect","click","display","justifyContent","alignItems","e","border","backgroundColor","margin"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\"\nimport { useInterval } from \"../useInterval\"\nimport {\n\tCANVAS_SIZE,\n\tSNAKE_START,\n\tAPPLE_START,\n\tSCALE,\n\tSPEED,\n\tDIRECTIONS,\n} from \"../constants\"\n\nimport BestScore from \"./bestScore\"\n\nconst MainSreen = () => {\n\tconst canvasRef = useRef()\n\tconst [snake, setSnake] = useState(SNAKE_START)\n\tconst [apple, setApple] = useState(APPLE_START)\n\tconst [dir, setDir] = useState([0, -1])\n\tconst [speed, setSpeed] = useState(null)\n\tconst [gameOver, setGameOver] = useState(true)\n\n\tuseInterval(() => gameLoop(), speed)\n\n\tconst endGame = () => {\n\t\tsetSpeed(null)\n\t\tsetGameOver(true)\n\t\tsetClick(\"Click the playing field to Start\")\n\t}\n\n\tconst moveSnake = ({ keyCode }) =>\n\t\tkeyCode >= 37 &&\n\t\tkeyCode <= 40 &&\n\t\tsetDir(DIRECTIONS[keyCode])\n\n\tconst createApple = () =>\n\t\tapple.map((_a, i) =>\n\t\t\tMath.floor(Math.random() * (CANVAS_SIZE[i] / SCALE))\n\t\t)\n\n\tconst checkCollision = (piece, snk = snake) => {\n\t\tif (\n\t\t\tpiece[0] * SCALE >= CANVAS_SIZE[0] ||\n\t\t\tpiece[0] < 0 ||\n\t\t\tpiece[1] * SCALE >= CANVAS_SIZE[1] ||\n\t\t\tpiece[1] < 0\n\t\t)\n\t\t\treturn true\n\n\t\tfor (const segment of snk) {\n\t\t\tif (\n\t\t\t\tpiece[0] === segment[0] &&\n\t\t\t\tpiece[1] === segment[1]\n\t\t\t)\n\t\t\t\treturn true\n\t\t}\n\t\treturn false\n\t}\n\n\tconst checkAppleCollision = (newSnake) => {\n\t\tif (\n\t\t\tnewSnake[0][0] === apple[0] &&\n\t\t\tnewSnake[0][1] === apple[1]\n\t\t) {\n\t\t\tsetScore(score + 1)\n\t\t\tlet newApple = createApple()\n\t\t\twhile (checkCollision(newApple, newSnake)) {\n\t\t\t\tnewApple = createApple()\n\t\t\t}\n\t\t\tsetApple(newApple)\n\t\t\treturn true\n\t\t}\n\t\treturn false\n\t}\n\n\tconst gameLoop = () => {\n\t\tconst snakeCopy = JSON.parse(JSON.stringify(snake))\n\t\tconst newSnakeHead = [\n\t\t\tsnakeCopy[0][0] + dir[0],\n\t\t\tsnakeCopy[0][1] + dir[1],\n\t\t]\n\t\tsnakeCopy.unshift(newSnakeHead)\n\t\tif (checkCollision(newSnakeHead)) endGame()\n\t\tif (!checkAppleCollision(snakeCopy)) snakeCopy.pop()\n\t\tsetSnake(snakeCopy)\n\t}\n\n\tconst startGame = () => {\n\t\tsetSnake(SNAKE_START)\n\t\tsetApple(APPLE_START)\n\t\tsetDir([0, -1])\n\t\tsetSpeed(SPEED)\n\t\tsetGameOver(false)\n\t}\n\n\tuseEffect(() => {\n\t\tconst context = canvasRef.current.getContext(\"2d\")\n\t\tcontext.setTransform(SCALE, 0, 0, SCALE, 0, 0)\n\t\tcontext.clearRect(\n\t\t\t0,\n\t\t\t0,\n\t\t\twindow.innerWidth,\n\t\t\twindow.innerHeight\n\t\t)\n\t\tcontext.fillStyle = \"gray\"\n\t\tsnake.forEach(([x, y]) => context.fillRect(x, y, 1, 1))\n\t\tcontext.fillStyle = \"red\"\n\t\tcontext.fillRect(apple[0], apple[1], 1, 1)\n\t}, [snake, apple, gameOver])\n\n\tconst [click, setClick] = useState(\n\t\t\"Click the playing field to Start\"\n\t)\n\n\tconst [score, setScore] = useState(0)\n\treturn (\n\t\t<div\n\t\t\tclassName=\"mainScreen\"\n\t\t\tstyle={{\n\t\t\t\tdisplay: \"flex\",\n\t\t\t\tjustifyContent: \"center\",\n\t\t\t\talignItems: \"center\",\n\t\t\t}}\n\t\t>\n\t\t\t<div\n\t\t\t\trole=\"button\"\n\t\t\t\ttabIndex=\"1\"\n\t\t\t\tonKeyDown={(e) => moveSnake(e)}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tsetScore(0)\n\t\t\t\t\tstartGame()\n\t\t\t\t\tsetClick(\"Game is running\")\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<BestScore score={score} />\n\n\t\t\t\t<div>\n\t\t\t\t\t<h3>{click}</h3>\n\t\t\t\t</div>\n\n\t\t\t\t<canvas\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tborder: \"2px solid gray\",\n\t\t\t\t\t\tbackgroundColor: \"white\",\n\t\t\t\t\t\tmargin: \"auto\",\n\t\t\t\t\t}}\n\t\t\t\t\tref={canvasRef}\n\t\t\t\t\twidth={`${CANVAS_SIZE[0]}px`}\n\t\t\t\t\theight={`${CANVAS_SIZE[1]}px`}\n\t\t\t\t></canvas>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default MainSreen\n"]},"metadata":{},"sourceType":"module"}